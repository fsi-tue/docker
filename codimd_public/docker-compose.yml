version: '3.2'
services:
  database:
    image: postgres:12-alpine
    container_name: codimd_public_database
    environment:
      - POSTGRES_USER=hackmd
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=hackmd
    volumes:
      - /srv/data/codimd_public/database:/var/lib/postgresql/data
    networks:
      backend:
        ipv4_address: 10.0.8.4
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U",  "hackmd"]
      interval: 30s
      timeout: 2s
      retries: 2
      start_period: 10s

  app:
    image: git.fsi.uni-tuebingen.de/gitea_container-registry/hackmdio_hackmd:2.4.2
    build: .
    container_name: codimd_public_container
    environment:
      - CMD_DOMAIN=notes.fsi.uni-tuebingen.de
      - CMD_USECDN=false
      - CMD_PROTOCOL_USESSL=true
      - CMD_DB_URL=${CMD_DB_URL}
      - CMD_EMAIL=true
      - CMD_ALLOW_GRAVATAR=false
      - CMD_ALLOW_ANONYMOUS=true
      - CMD_ALLOW_ANONYMOUS_EDITS=true
      - CMD_ALLOW_FREEURL=true
      - CMD_DEFAULT_PERMISSION=limited
      - CMD_ALLOW_PDF_EXPORT=true
      - CMD_IMAGE_UPLOAD_TYPE=filesystem
      - CMD_AUTO_VERSION_CHECK=false
      - CMD_SESSION_LIFE=2592000000
    volumes:
      - ./config.json:/home/hackmd/app/config.json
      - /srv/data/codimd_public/persistuploads:/home/hackmd/app/public/uploads
    networks:
      backend:
        ipv4_address: 10.0.8.3
    restart: always
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      # in CodiMD/HackMD there is no /_health endpoint like in Hedgedoc
      test: ["CMD", "curl", "-f", "http://localhost:3000/new"]
      interval: 30s
      timeout: 1s
      retries: 2
      start_period: 10s

  nginx:
    image: fsinf/nginx:latest
    container_name: codimd_public_nginx
    ports:
      - "134.2.220.61:9010:443"
    volumes:
      - /srv/docker-certificates/notes.fsi.uni-tuebingen.de/:/etc/nginx/ssl:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-codimd.conf:/etc/nginx/sites-enabled/nginx-codimd.conf:ro
      - /srv/docker/shared/nginx/:/etc/nginx/shared/:ro
    networks:
      backend:
        ipv4_address: 10.0.8.2
    restart: always
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://notes.fsi.uni-tuebingen.de/_nginx_health"]
      interval: 30s
      timeout: 1s
      retries: 2
      start_period: 10s

networks:
  backend:
    ipam:
      config:
        - subnet: 10.0.8.0/24
